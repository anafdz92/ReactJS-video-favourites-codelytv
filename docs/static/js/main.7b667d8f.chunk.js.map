{"version":3,"sources":["api/index.js","components/Loading.js","components/Item.js","components/Add.js","components/Header.js","components/List.js","components/Video.js","components/Detail.js","components/root.js","App.js","serviceWorker.js","index.js"],"names":["FAKE_DATA","id","title","url","embed","thumbnail","getVideos","Promise","resolve","reject","setTimeout","getDescription","_ref","Object","asyncToGenerator","regenerator_default","a","mark","_callee","resp","wrap","_context","prev","next","fetch","sent","abrupt","json","t0","stop","this","apply","arguments","Loading","speed","props","typed","Typed","$loading","strings","message","typeSpeed","parseInt","destroy","_this","react_default","createElement","className","ref","el","PureComponent","Item","_this$props$data","data","Link","to","concat","src","alt","Add","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","hasError","showSending","text","handleChange","bind","assertThisInitialized","handleSubmit","field","_this2","event","setState","defineProperty","target","value","app","length","description","e","preventDefault","newVideo","onClose","token","match","parseYoutubeUrl","validation","push","ok","then","_this$state","onClick","type","onChange","minLength","maxLength","required","disabled","React","memo","onClickAdd","List","isLoading","videos","error","showAdd","handleAdd","handleCloseAdd","reload","catch","components_Loading","Fragment","components_Header","map","video","i","components_Item","key","components_Add","Component","width","height","frameBorder","Detail","_ref2","idVideo","find","join","getVideoDetail","params","err","components_Video","withRouter","Root","BrowserRouter","Route","exact","path","component","App","root","Boolean","window","location","hostname","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.7b667d8f.chunk.js","sourcesContent":["const FAKE_DELAY = 2000;\nconst FAKE_DATA = [\n\t{\t\n\t\tid:0,\n\t\ttitle:'¿Qué es CodelyTV? 🍄🔝 - Formación para programadores y divulgación del mundo del desarrollo',\n\t\turl:'https://www.youtube.com/watch?v=rpMQd2DazTc',\n\t\tembed:'https://www.youtube.com/embed/rpMQd2DazTc',\n\t\tthumbnail:'https://img.youtube.com/vi/rpMQd2DazTc/maxresdefault.jpg',\n\t},\n\t{ \t\n\t\tid:1,\n\t\ttitle:'Introducción a PHP: Cómo configurar tu entorno de desarrollo 🐘',\n\t\turl: 'https://www.youtube.com/embed/watch?v=v2IjMrpZog4',\n\t\tembed: 'https://www.youtube.com/embed/v2IjMrpZog4',\n\t\tthumbnail: 'https://img.youtube.com/vi/v2IjMrpZog4/maxresdefault.jpg',\n\t},\n\t{ \n\t\tid:2,\n\t\ttitle:'Comunicación entre microservicios: 🕋 Event-Driven Architecture',\n\t\turl: 'https://www.youtube.com/watch?v=V4mjxJ5czog',\n\t\tembed: 'https://www.youtube.com/embed/V4mjxJ5czog',\n\t\tthumbnail: 'https://img.youtube.com/vi/V4mjxJ5czog/maxresdefault.jpg',\n\t},\n\t{ \t\n\t\tid:3,\n\t\ttitle:'🤔 Cuándo usar #interfaces… y cuándo EVITARLAS',\n\t\turl: 'https://www.youtube.com/watch?v=uP1CoHtjALg',\n\t\tembed: 'https://www.youtube.com/embed/uP1CoHtjALg',\n\t\tthumbnail: 'https://img.youtube.com/vi/uP1CoHtjALg/maxresdefault.jpg',\n\t},\n\t{ \n\t\tid:4,\n\t\ttitle:'Qué es la \"Composición sobre herencia\" 👨‍👩‍👧‍👦🚔 (#CompositionOverInheritance)',\n\t\turl: 'https://www.youtube.com/watch?v=OyTPDFyGWRc',\n\t\tembed: 'https://www.youtube.com/embed/OyTPDFyGWRc',\n\t\tthumbnail: 'https://img.youtube.com/vi/OyTPDFyGWRc/maxresdefault.jpg',\n\t},\n\t{ \n\t\tid:5,\n\t\ttitle:'ReactJS vs VueJS vs Angular 6 ⚡️| 1/5 Qué aporta un framework y qué es un componente',\n\t\turl: 'https://www.youtube.com/watch?v=lttZCIin4HM',\n\t\tembed: 'https://www.youtube.com/embed/lttZCIin4HM',\n\t\tthumbnail: 'https://img.youtube.com/vi/lttZCIin4HM/maxresdefault.jpg',\n\t}\n]; \n\nexport const addVideo = (newVideo) => new Promise((resolve, reject) => {\t\n\tsetTimeout(() => { \n\t\tnewVideo.id = FAKE_DATA.length + 1;\n\t\tFAKE_DATA.push(newVideo);\n\t\treturn resolve({ok:1});\n\t},FAKE_DELAY);\n});\n \nexport const getVideos = () => new Promise((resolve, reject) => {\t\n\tsetTimeout(() => { \n\t\treturn resolve(FAKE_DATA);\n\t},FAKE_DELAY);\n});\n\nconst getDescription = async () => {\n\ttry{\n\t\tconst resp = await fetch('https://baconipsum.com/api/?type=all-meat&paras=3&start-with-lorem=1');\n\t\treturn resp.json();\n\t}catch(error){\n\t\tthrow error;\n\t}\n}\n\nexport const getVideoDetail = ({idVideo}) => new Promise((resolve, reject) => {\t\n\tsetTimeout(() => { \n\t\tconst video = FAKE_DATA.find((el) => parseInt(el.id) === parseInt(idVideo));\n\t\t// Something goes wrong\n\t\tif(!video) return reject({message:\"No se ha encontrado el video ;(\"});\n\t\t// All is ok\n\t\tif(video.description) return resolve(video);\n\t\t//In case video don't have text description\n\t\treturn getDescription().then(description => {\n\t\t\tvideo.description = description.join();\n\t\t\treturn resolve(video);\n\t\t});\n\t},FAKE_DELAY);\n});","import React, { PureComponent } from \"react\";\nimport PropTypes from 'prop-types';\nimport Typed from 'typed.js';\n\nclass Loading extends PureComponent {\n    \n    componentDidMount() {\n        const speed = this.props.speed || 90;\n        this.typed = new Typed(this.$loading, {\n          strings: [this.props.message],\n          typeSpeed: parseInt(speed)\n        });\n    }\n    componentWillUnmount() {\n        this.typed.destroy();\n    }\n    render() {\n        return (<div className=\"loader\" ref={el => this.$loading = el} ></div>);\n    }\n}\n\nLoading.propTypes = {\n    message: PropTypes.string.isRequired,\n    speed: PropTypes.number\n};\n\nexport default Loading;","import React, {PureComponent} from \"react\";\nimport PropTypes from 'prop-types';\nimport { Link } from \"react-router-dom\";\n\nclass Item extends PureComponent{\n\trender(){\n\t\tconst { id, thumbnail, title } = this.props.data;\n\t\treturn (<Link className=\"grid-item-link\" to={`/${id}`}>\n\t\t\t<div className=\"grid-item\" >\n\t\t\t\t<img className=\"preview-image\" src={thumbnail} alt={title}/>\n\t\t\t\t<div className=\"preview-title\">{title}</div>\n\t\t\t</div>\n\t\t</Link>);\n\t}\n}\n\nItem.propTypes = {\n\tdata: PropTypes.object.isRequired\n};\n\nexport default Item;","import React, {PureComponent} from \"react\";\nimport { addVideo } from '../api';\nimport PropTypes from 'prop-types';\n\nconst parseYoutubeUrl = (url) => {\n    const match = url.match(/[?&]([^=#]+)=([^&#]*)/);\n    return match && match[2];\n};\n\nclass Add extends PureComponent {\n    constructor (props) {\n        super(props);\n        this.state = {\n            hasError: false,\n            showSending: false,\n            title:'',\n            url: '',\n            text:''\n        }\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n    handleChange (field) {\n        return (event) => {\n            this.setState({\n                [field]: event.target.value\n            })    \n        }\n    }\n\n    validation(app){\n        if(app.title.length > 0 &&  app.url.length > 0 && app.description.length > 2){\n            return true;\n        } else {\n            return false;\n        }\n    }\n    handleSubmit(e){\n        e.preventDefault();\n        const { onClose } = this.props;\n        const token = parseYoutubeUrl(this.state.url || '');\n        if(this.validation(this.state) && token){\n            this.setState({showSending:true})\n            addVideo({\n                title: this.state.title,\n                description: this.state.description,\n                url: this.state.url,\n                thumbnail: `https://img.youtube.com/vi/${token}/maxresdefault.jpg`,\n                embed: `https://www.youtube.com/embed/${token}`\n            }).then(onClose(true));\n        }else{\n            this.setState({\n                hasError:true\n            });\n        }\n    }\n\n    render() {\n        const { showSending, title, url, description, hasError} = this.state;\n        const {onClose} = this.props;\n        return (<div className=\"modal\">\n              <div className=\"modal-content\">\n                <span className=\"close\" onClick={onClose(false)}>&times;</span>\n                <h2> Crear nuevo Vídeo </h2>\n                { showSending && (<span className=\"success\"> Enviando .... </span> )}\n                { hasError && (<div className=\"error\"> Some fields are empty or contain an wrong values. </div>) }\n                <form>\n                    <label>Título</label>\n                    <input type=\"text\" value={title} onChange={this.handleChange(\"title\")} minLength=\"3\" maxLength=\"200\"  required/>\n                    <label>Url ejemplo: https://www.youtube.com/watch?v=t_gPxAeC3rc</label>\n                    <input type=\"text\" value={url} onChange={this.handleChange(\"url\")} minLength=\"3\" maxLength=\"200\"  required/>\n                    <label>Descripción</label>\n                    <textarea value={description} onChange={this.handleChange(\"description\")} required/>\n                    <input type=\"submit\" onClick={this.handleSubmit} value=\"Submit\" disabled={showSending}/>\n                </form>\n              </div>\n            </div>);\n    }\n}\n\nAdd.propTypes = {\n    onClose: PropTypes.func.isRequired\n};\n\nexport default Add;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Header = ({onClickAdd}) => (\n    <div className=\"header-content\">\n        <div className=\"header-title-text\" >Mis vídeos favoritos</div>\n        <input type=\"button\" onClick={onClickAdd} value=\"Añadir Video\" className=\"header-button-add\"/>\n    </div>\n);\n\nHeader.propTypes = {\n    onClickAdd: PropTypes.func.isRequired\n};\n\nexport default React.memo(Header);\n","import React, { Component } from 'react';\nimport { getVideos } from '../api';\nimport Loading from './Loading';\nimport Item from './Item';\nimport Add from './Add';\nimport Header from './Header';\nclass List extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isLoading: false,\n      videos: null,\n      error:null,\n      showAdd: false\n    };\n    this.handleAdd = this.handleAdd.bind(this);\n    this.handleCloseAdd = this.handleCloseAdd.bind(this);\n  }\n  async componentDidMount() {\n    this.setState({ isLoading: true });\n    \n    // Promises example  \n    // getVideos()\n    //   .then(data => this.setState({ videos: data, isLoading: false }))\n    //   .catch(error => this.setState({ error, isLoading: false }));\n    \n    try{\n      const videos = await getVideos();\n      this.setState({ videos , isLoading: false });\n    } catch(error){\n      this.setState({ error, isLoading: false });\n    }\n    return true;\n  }\n  handleAdd(e) {\n    e.preventDefault();\n    this.setState({showAdd:true});\n  }\n  handleCloseAdd(reload){\n    return () => {\n      if(reload){\n        this.setState({ isLoading: true , showAdd:false});\n        getVideos().then(data => this\n          .setState({ videos: data, isLoading: false, showAdd:false }))\n          .catch(error => this.setState({ error, isLoading: false, showAdd:false }));\n      } else {\n        this.setState({ showAdd: false });\n      }\n    }\n  }\n  render() {\n    const { videos,  isLoading, error } = this.state;\n    if (isLoading) {\n      return <Loading message=\"Cargando ...\"/>;\n    }\n    if (error) {\n      return <p className=\"error\" >{error.message}</p>;\n    }\n    return (<React.Fragment>\n        <Header onClickAdd={this.handleAdd} />\n        <div className=\"container\">\n          <div className=\"grid-container\">\n              {\n                videos && videos.map((video,i) => {\n                  return (<Item key={i} data={video}/>)\n                })\n              }\n          </div>\n        </div>\n        { this.state.showAdd && (<Add onClose={this.handleCloseAdd}/>)}\n     </React.Fragment>);\n  }\n}\n\nexport default List;","import React from \"react\";\nimport PropTypes from 'prop-types';\n\nconst Video = ({ title, embed }) => (\n    <div className=\"video-container\">\n    \t <iframe title={title} className=\"player\" type=\"text/html\" width=\"100%\" height=\"400px\"\n            src={embed}\n        frameBorder=\"0\"/>\n    </div>\n);\n\nVideo.propTypes = {\n    title: PropTypes.string.isRequired,\n    embed: PropTypes.string.isRequired\n};\n\nexport default React.memo(Video);\n","import React, {Component} from 'react';\nimport { withRouter } from 'react-router'\nimport { getVideoDetail } from '../api';\nimport Loading from './Loading';\nimport Video from './Video';\n\nclass Detail extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isLoading: true\n    };\n  }\n  componentDidMount() {\n    const { match } = this.props;\n    this.setState({ isLoading: true });\n    getVideoDetail({ idVideo: match.params.id })\n    .then(data => this.setState({ video: data, isLoading: false }))\n    .catch(err => this.setState({ error:err, isLoading: false }));\n  }\n  render() {\n    const { isLoading, error, video } = this.state;\n    const { match } = this.props;\n   \n    if (error) return <p className=\"error\">{error.message}</p>;\n    if (isLoading) return <Loading message={`Cargando video (#${match.params.id}) .... `} speed={15}/>;\n\n    return (<React.Fragment>\n        <div className=\"detail-container\">\n            <Video title={video.title} embed={video.embed}/>\n            <div className=\"detail-summary\">\n              <h2 className=\"detail-title\">{video.title}</h2>\n              <p>{video.description}</p>\n            </div>\n        </div>\n     </React.Fragment>);\n  }\n}\n\nexport default  withRouter(Detail);","import React from 'react';\nimport { BrowserRouter, Route } from 'react-router-dom'\nimport List from './List';\nimport Detail from './Detail';\n\nconst Root = () => (\n\t<BrowserRouter>\n\t\t<div>\n\t\t\t<Route exact path=\"/\" component={List}/>\n\t\t\t<Route exact path=\"/:id\" component={Detail}/>\n\t\t</div>\n\t</BrowserRouter>\n);\n\nexport default Root;","import React, { Component } from 'react';\nimport Root from './components/root';\n\nclass App extends Component {\n  render() {\n    return (<Root/>);\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}